mongoImport -> to import json files in mongodb database

mongoimport -d crunchbase -c companies companies.json
-----------------------------------------------------------------------
var query = {"category_code":"biotech"};
var projection = {"name" : 1, "category_code": 1, "_id" : 0};
var cursor = db.collections('comapnies').find(query); // this find method is sync call
cursor.project(projection);

or 

var cursor = db.collections('comapnies').find(query,projection);


mongoShell  <----> mongoDB Database <------> NOde | ur code | driver

----------------------------------Through Command Line-----------------------------------------

additional node module we need to install for this command-line-args--

function comandLineOptions() {
	
	var command = comandLineArgs([
		{name: "firstName" , alias : "f" , type : numaber},
	])

}

after this we need to parse this object

var options = command.parse();

---------------------query method-------------------------

var query = {
	"founded_yesr" : {
		"$gte" : options.firstyear,
		"$lte" : options.lastyear,
	}
}

if("employee" in  options) {
	query.number_of_employee = {"$gte" : options.employee};
}

-----------------------------------------------------------

$options to specify the data with other options like in example "i" for case insensitive

var query = {};
if("overview" in options) {
	query.overview = {"$regex" : options.overview, "$options": "i"};
}

if("milestones" in options) {
	query["milestones.sourcedestination"] = {"$regex" : options.milestones, "$options" : "i"};
}

-----------------------------------------------------------

if("ipo" in options) {
	if(options.ipo == "yes"){
		query["ipo.valuation_amount"] = {"$exists" : true, $ne : null};
	} else {
		query["ipo.valuation_amount"] = null;
	}
}
------------------------------------------------------------

for embedded documents in array we not use dot notations.

query["ipo.valuation_amount"]


------------------------------------------------------------
-------SkIP-------SORT-------------LIMIT---------------------

SORT : just chain with ur cursor.
cursor.sort({founded_year : 1});

1 - > sort ascending order 
-1 - > reverse order

cursor.sort([[founded_year : 1][no_of_empl : -1]]);
				1st this run		2nd this will run

cursor.skip(options.skip);
cursor.limit(options.limit);

sort -> skip - > limit -----------------order in which mongodb run this cmnd

------------------------------------------------------------
----Insert   1-----------------------Insert Many------------

